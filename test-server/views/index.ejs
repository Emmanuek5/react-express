<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>React Express Test</title>
    <style>
      .dashboard {
        max-width: 1200px;
        margin: 0 auto;
        padding: 20px;
      }
      .card {
        background: white;
        border-radius: 8px;
        padding: 20px;
        margin-bottom: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
      }
      .user-card {
        display: flex;
        align-items: center;
        gap: 20px;
      }
      .user-avatar {
        width: 50px;
        height: 50px;
        background: #ddd;
        border-radius: 25px;
      }
      .counter-controls {
        margin-top: 10px;
      }
      .counter-controls button {
        margin-right: 10px;
        padding: 5px 10px;
      }
      .todo-item {
        display: flex;
        align-items: center;
        gap: 10px;
        margin: 5px 0;
      }
      .nav-links {
        margin: 20px 0;
      }
      .nav-links a {
        margin-right: 15px;
        padding: 8px 15px;
        text-decoration: none;
        color: #333;
        background: #f0f0f0;
        border-radius: 4px;
      }
      .nav-links a:hover {
        background: #e0e0e0;
      }
      .prefetch-links {
        margin: 20px 0;
        padding: 15px;
        background: #f9f9f9;
        border-radius: 4px;
      }
      .prefetch-links a {
        display: inline-block;
        margin: 5px 0;
        color: #0066cc;
        text-decoration: none;
      }
      .prefetch-links a:hover {
        text-decoration: underline;
      }
    </style>
  </head>
  <body>
    <div data-content>
      <div class="dashboard">
        <!-- Basic State Example -->
        <div class="card">
          <div class="counter-section">
            <h2>Counter Example</h2>
            <div class="counter-display">
              Count: <span data-react-state="counter">0</span>
            </div>
            <div class="counter-controls">
              <button
                onclick="ReactExpress.setState('counter', (ReactExpress.getState('counter') || 0) - 1, { sync: true })"
              >
                -
              </button>
              <button
                onclick="ReactExpress.setState('counter', (ReactExpress.getState('counter') || 0) + 1, { sync: true })"
              >
                +
              </button>
              <button onclick="ReactExpress.setState('counter', 0, { sync: true })">
                Reset
              </button>
            </div>
          </div>
        </div>

        <!-- User Profile Example -->
        <div class="card">
          <h2>User Profile</h2>
          <div class="user-card">
            <div class="user-avatar"></div>
            <div>
              <div>First Name: <span data-react-state="firstName"></span></div>
              <div>Last Name: <span data-react-state="lastName"></span></div>
            </div>
          </div>
        </div>

        <!-- Router Test Section -->
        <div class="card">
          <h2>Router Tests</h2>
          <div class="router-section">
            <h3>Basic Navigation</h3>
            <div class="nav-links">
              <a href="/" data-route>Home</a>
              <a href="/about" data-route>About</a>
              <a href="/contact" data-route>Contact</a>
            </div>

            <h3>Prefetch Examples</h3>
            <div class="prefetch-links">
              <p>These links will be prefetched when they enter the viewport:</p>
              <a href="/about" data-route prefetch>About (prefetched)</a><br>
              <a href="/contact" data-route prefetch>Contact (prefetched)</a>
            </div>

            <h3>State Persistence Test</h3>
            <p>Try changing the counter above and then navigating between pages.</p>
            <p>The counter value should persist across navigation because it's managed by our state system.</p>
          </div>
        </div>

        <!-- Multiple State Dependencies -->
        <div class="card">
          <h2>User Profile</h2>
          <div class="user-card">
            <div class="user-avatar"></div>
            <div data-react-subscribe="firstName,lastName">
              <div>First Name: <span data-react-state="firstName"></span></div>
              <div>Last Name: <span data-react-state="lastName"></span></div>
            </div>
          </div>
          <button onclick="updateName()">Update Name</button>
        </div>

        <!-- Form with State Binding -->
        <div class="card">
          <h2>Todo List</h2>
          <div>
            <input
              type="text"
              data-react-state="newTodo"
              placeholder="Add new todo"
            />
            <button onclick="addTodo()">Add</button>
          </div>
          <ul class="todo-list" data-react-state="todos">
            <script>
              ReactExpress.subscribe("todos", (todos) =>
                todos
                  .map(
                    (todo) => `
                              <li class="todo-item">
                                  <input 
                                      type="checkbox" 
                                      ${todo.completed ? "checked" : ""}
                                      onchange="toggleTodo(${todo.id})"
                                  >
                                  <span>${todo.text}</span>
                              </li>
                          `
                  )
                  .join("")
              );
            </script>
          </ul>
        </div>

        <!-- Suspense Loading Example -->
        <div class="card">
          <h2>Weather Widget</h2>
          <div
            data-suspense="/api/weather"
            data-placeholder="<div class='loading-placeholder'>Loading weather data...</div>"
          >
            <!-- Content will be loaded automatically -->
          </div>
        </div>

        <!-- Nested Suspense Example -->
        <div class="card">
          <h2>Dashboard Widgets</h2>
          <div
            data-suspense="/api/dashboard"
            data-placeholder="<div class='loading-placeholder'>Loading dashboard data...</div>"
          >
            <div class="dashboard-widgets">
              <div
                data-suspense="/api/dashboard/stats"
                data-placeholder="<div class='loading-placeholder'>Loading stats...</div>"
              >
                <!-- Stats will load independently -->
              </div>
              <div
                data-suspense="/api/dashboard/chart"
                data-placeholder="<div class='loading-placeholder'>Loading chart...</div>"
              >
                <!-- Chart will load independently -->
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <script>
      // Client-side functions
      function updateName() {
        fetch("/api/user/update", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            firstName: "John",
            lastName: "Doe",
          }),
        });
      }

      function addTodo() {
        const input = document.querySelector('[data-react-state="newTodo"]');
        fetch("/api/todos/add", {
          method: "POST",
          headers: {
            "Content-Type": "application/json",
          },
          body: JSON.stringify({
            text: input.value,
          }),
        });
        input.value = "";
      }

      function toggleTodo(id) {
        fetch(`/api/todos/${id}/toggle`, {
          method: "POST",
        });
      }
    </script>
  </body>
</html>
